on:
  workflow_call:
    inputs:
      gradle-tasks:
        description: Tasks to run
        required: true
        type: string
      java-version:
        description: Java version to use for build
        required: true
        type: string
      notify-failure:
        description: Notify on build failure to Slack
        default: true
        type: boolean
      skip-build:
        description: Skip build and only scan vulnerabilities
        default: false
        type: boolean
    secrets:
      # GH_PAT:
      #   required: true
      WETF_ARTIFACTORY_USER:
      WETF_ARTIFACTORY_PASSWORD:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      #
      # Build, test and create Docker image
      #

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Write dependency lockfile for security scan
        env:
          ORG_GRADLE_PROJECT_wetfArtifactoryUser: ${{ secrets.WETF_ARTIFACTORY_USER }}
          ORG_GRADLE_PROJECT_wetfArtifactoryPassword: ${{ secrets.WETF_ARTIFACTORY_PASSWORD }}
        run: ./gradlew dependencies --write-locks

      - name: Build and test with Gradle
        if: ${{ !inputs.skip-build }}
        env:
          ORG_GRADLE_PROJECT_wetfArtifactoryUser: ${{ secrets.WETF_ARTIFACTORY_USER }}
          ORG_GRADLE_PROJECT_wetfArtifactoryPassword: ${{ secrets.WETF_ARTIFACTORY_PASSWORD }}
        run: ./gradlew ${{ inputs.gradle-tasks }}

      #
      # Security scans
      #

      - name: Vulnerability scan
        uses: wetransform/gha-trivy@master
        with:
          junit-test-output: 'build/test-results/trivy.xml' # added to unit test report
          report-retention-days: 30

      #
      # Report on unit tests and critical vulnerabilities
      #

        # https://github.com/marketplace/actions/junit-report-action
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'build/test-results/**/*.xml'
          require_tests: ${{ !inputs.skip-build }}

          # Workaround for check that is additionally created being associated
          # to the wrong workflow/run. Instead not additional check is created.
          # See https://github.com/mikepenz/action-junit-report/issues/40
          annotate_only: true
          detailed_summary: true
          fail_on_failure: true # in case of critical security vulnerabilities

      #
      # Report build failure to Slack
      #

        # https://github.com/marketplace/actions/slack-notify-build
      - name: Notify slack fail
        if: ${{ inputs.notify-failure && failure() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: build-failures
          status: FAILED
          color: danger
